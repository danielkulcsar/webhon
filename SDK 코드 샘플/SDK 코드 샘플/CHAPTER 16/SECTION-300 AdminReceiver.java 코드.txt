package com.example.admin02;

import android.app.Activity;
import android.app.admin.DeviceAdminReceiver;
import android.app.admin.DevicePolicyManager;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.AdapterView.OnItemSelectedListener;

public class AdminReceiver extends DeviceAdminReceiver {
  // 암호 설정 정보를 저장하는 기본 설정
  static SharedPreferences getSamplePreferences(Context context) {
    return context.getSharedPreferences(DeviceAdminReceiver.class.getName(), 0);
  }
  // 암호 유형
  static String PREF_PASSWORD_QUALITY = "pw_quality";
  // 액티비티
  public static class Controller extends Activity {
    // 디바이스 정책 관리자 선언
    DevicePolicyManager mDPM;
    // 컴포넌트 네임의 선언
    ComponentName mDeviceAdmin;
    // 유효·무효 버튼의 선언
    Button mEnableButton;
    Button mDisableButton;
    // 선택할 암호 유형을 배열로 저장
    final static int mPasswordQualityValues[] = new int[] {
      // 지정 없음
      DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,
      // 패턴, 숫자, 영문자, 영문 숫자
      DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,
      // 숫자, 영문자, 영문 숫자
      DevicePolicyManager.PASSWORD_QUALITY_NUMERIC,
      // 영문자, 영문 숫자
      DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC,
      // 영문 숫자만
      DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC
    };
    // 스피너, 에디트텍스트, 버튼의 선언
    Spinner mPasswordQuality;
    EditText mPasswordLength;
    Button mSetPasswordButton;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      setContentView(R.layout.main);
      // 디바이스 정책 관리자의 구현
      mDPM = (DevicePolicyManager)getSystemService(Context.DEVICE_POLICY_SERVICE);
      // 컴포넌트 네임에 'Controller’ 클래스 지정
      mDeviceAdmin = new ComponentName(Controller.this, AdminReceiver.class);
      setContentView(R.layout.main);
      // Admin 유효 버튼, 리스너 세트
      mEnableButton = (Button)findViewById(R.id.enable);
      mEnableButton.setOnClickListener(mEnableListener);
      // Admin 무효 버튼, 리스너 세트
      mDisableButton = (Button)findViewById(R.id.disable);
      mDisableButton.setOnClickListener(mDisableListener);
      // 암호 유형 스피너의 설정
      mPasswordQuality = (Spinner)findViewById(R.id.password_quality);
      // ArrayAdapter 클래스를 이용하여 오브젝트 생성
      ArrayAdapter<String> adapter = new ArrayAdapter<String>(
          this, android.R.layout.simple_spinner_item);
      // 어댑터에 추가
      adapter.add("Not Specified");
      adapter.add("Pattern, Number, Alphabet, Number and Alphabet");
      adapter.add("Number, Alphabet, Number and Alphabet");
      adapter.add("Alphabet, Number and Alphabet");
      adapter.add("Number and Alphabet Only");
      adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
      mPasswordQuality.setAdapter(adapter);
      mPasswordQuality.setOnItemSelectedListener(
      new OnItemSelectedListener() {
        public void onItemSelected(
          AdapterView<?> parent, View view, int position, long id) {
            setPasswordQuality(mPasswordQualityValues[position]);
          }
          public void onNothingSelected(AdapterView<?> parent) {
            setPasswordQuality(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED);
          }
        });
      mSetPasswordButton = (Button)findViewById(R.id.set_password);
      mSetPasswordButton.setOnClickListener(mSetPasswordListener);
    }
    // 버튼 상태를 변경한다
    void updateButtonStates() {
      if (mDPM.isAdminActive(mDeviceAdmin) == true) {
        mEnableButton.setEnabled(false);
        mDisableButton.setEnabled(true);
        mPasswordQuality.setEnabled(true);
        mSetPasswordButton.setEnabled(true);
      } else {
        mEnableButton.setEnabled(true);
        mDisableButton.setEnabled(false);
        mPasswordQuality.setEnabled(false);
        mSetPasswordButton.setEnabled(false);
      }
    }
    // 암호 유형 선택 시에 기본 설정을 갱신한다
    void setPasswordQuality(int quality) {
      SharedPreferences prefs = getSamplePreferences(this);
      prefs.edit().putInt(PREF_PASSWORD_QUALITY, quality).commit();
      updatePolicies();
    }
    // 암호 유형 선택 후 암호 정책을 지정한다
    void updatePolicies() {
      SharedPreferences prefs = getSamplePreferences(this);
      final int pwQuality = prefs.getInt(PREF_PASSWORD_QUALITY,
        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED);
      if (mDPM.isAdminActive(mDeviceAdmin) == true) {
        mDPM.setPasswordQuality(mDeviceAdmin, pwQuality);
      }
    }
    @Override
    protected void onResume() {
      super.onResume();
      updateButtonStates();
    }
    // 유효 버튼
    private OnClickListener mEnableListener = new OnClickListener() {
      public void onClick(View v) {
        // 디바이스 정책 관리자를 설정하는 Activity를 작동
        Intent intent = new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);
        intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN, mDeviceAdmin);
        startActivity(intent);
      }
    };
    // 무효 버튼
    private OnClickListener mDisableListener = new OnClickListener() {
      public void onClick(View v) {
        // 활성화되어 있는 디바이스 admin을 비활성화로
        mDPM.removeActiveAdmin(mDeviceAdmin);
        updateButtonStates();
      }
    };
    // 페스워드 설정 버튼
    private OnClickListener mSetPasswordListener = new OnClickListener() {
      public void onClick(View v) {
        // 패스워드를 설정하는 액티비티의 시작
        Intent intent = new Intent(DevicePolicyManager.ACTION_SET_NEW_PASSWORD);
        startActivity(intent);
      }
    };
  }
}