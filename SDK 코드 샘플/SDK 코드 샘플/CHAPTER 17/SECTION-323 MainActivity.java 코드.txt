package com.example.sip01;

import java.text.ParseException;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Intent;
import android.net.sip.SipException;
import android.net.sip.SipManager;
import android.net.sip.SipProfile;
import android.net.sip.SipRegistrationListener;
import android.os.Bundle;
import android.util.Log;

public class MainActivity extends Activity {
  SipManager manager = null;
  SipProfile sp = null;
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    
    // SipManager 인스턴스 생성
    manager = SipManager.newInstance(this);
    SipProfile.Builder builder;
    try {
      
      // SipProfile 작성
      builder = new SipProfile.Builder(
        "username", 
        "********.aspgate.info"
      );
      builder.setPassword("password");
      sp = builder.build();
      
      // SIP콜 수신용 인텐트 작성
      Intent i = new Intent();
      i.setAction("android.SipDemo.INCOMING_CALL");
      PendingIntent pi = 
        PendingIntent.getBroadcast(
          this, 0, i, Intent.FILL_IN_DATA);
      
      // SIP 서버와 접속
      manager.open(sp, pi, null);
      
      // 리스너 설정
      manager.setRegistrationListener(
        sp.getUriString(), 
        new SipRegistrationListener() {
          
        // 등록 요청을 보낼 때
        public void onRegistering(
          String localProfileUri) {
          Log.i("onRegistering", "Registering with SIP Server...");
          Log.i("localProfileUri", localProfileUri);
        }

        // 등록 성공 시
        public void onRegistrationDone(
          String localProfileUri, 
          long expiryTime) {
          Log.i("onRegistrationDone", "Ready");
          Log.i("localProfileUri", localProfileUri);
        }

        // 등록 실패 시
        public void onRegistrationFailed(
          String localProfileUri, 
          int errorCode,
          String errorMessage) {
          Log.i("onRegistrationFailed", "Registration failed.");
          Log.i("localProfileUri", localProfileUri);
          Log.i("errorCode", String.valueOf( errorCode ));
          Log.i("errorMessage", errorMessage);
        }
      });
    } catch (ParseException e) {
      e.printStackTrace();
    } catch (SipException e) {
      e.printStackTrace();
    }
  }
  @Override
  public void onDestroy() {
    super.onDestroy();
    try {
      if (sp != null) {
        manager.close(sp.getUriString());
        Log.i("onDestroy", "closed");
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}