package com.example.videosnapshot;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import android.app.Activity;
import android.hardware.Camera;
import android.media.MediaRecorder;
import android.os.Bundle;
import android.os.Environment;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends Activity {
  // 서페이스 뷰 선언 
  private SurfaceView cameraPreview;
  // 카메라 선언 
  private Camera camera;
  // 미디어 레코더 선언
  private MediaRecorder mRecorder;
  // 버튼선언 
  private Button button1;
  private Button button2;
  // 촬영 버튼 플래그 설정
  private boolean record = false;
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    // 전체 화면 지정
    getWindow().addFlags(
        WindowManager.LayoutParams.FLAG_FULLSCREEN);
    // 카메라 미리보기 화면 설정
    cameraPreview = 
      (SurfaceView) findViewById(R.id.preview);
    // 서페이스 홀더 생성
    cameraPreview.getHolder().addCallback(finderViewCallback);
    cameraPreview.getHolder().setType(
        SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
    // 동영상 촬영 버튼 설정
    button1 = (Button) findViewById(R.id.button1);
    // 동영상 촬영 버튼 리스너 등록 
    button1.setOnClickListener(shutterButtonListener1);
    // 정지 화면 촬영 버튼 설정
    button2 = (Button) findViewById(R.id.button2);
    // 정지화면 촬영 버튼 리스너 등록
    button2.setOnClickListener(shutterButtonListener2);
  }
  // 서페이스 홀더 콜백 
  private SurfaceHolder.Callback finderViewCallback = 
    new SurfaceHolder.Callback() {
    // 서페이스 생성 처리
    public void surfaceCreated(SurfaceHolder holder) {
      // 카메라 초기화
      try {
        // 카메라 오픈 
        camera = Camera.open();
        // 미리보기 화면 지정 
        camera.setPreviewDisplay(holder);
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
    // 서페이스 변경 처리
    public void surfaceChanged(SurfaceHolder holder, 
        int format, int width, int height) {
      // 미리보기 정지 
      camera.stopPreview();
      // 카메라 매개 변수 취득
      Camera.Parameters params = camera.getParameters();
      // 매개 변수에 미리보기 표시 크기를 설정 
      params.setPreviewSize(params.getPreviewSize().width, 
                            params.getPreviewSize().height);
      // 동영상 촬영 중 정지화면 촬영 지원 체크
      if (params.isVideoSnapshotSupported()) {
        Toast.makeText(MainActivity.this, 
            "동영상 촬영 중 정지화면 촬영 ⇒ 지원", 
            Toast.LENGTH_LONG).show();
      } else {
        Toast.makeText(MainActivity.this, 
            "동영상 촬영 중 정지화면 촬영 ⇒ 미지원", 
            Toast.LENGTH_LONG).show();
      }
      // 매개 변수 지정
      camera.setParameters(params);
      // 카메라 미리보기 시작
      camera.startPreview();
    }
    // 서페이스 해제 처리 
    public void surfaceDestroyed(SurfaceHolder holder) {
      // 카메라 미리보기 정지 
      camera.stopPreview();
      // 카메라 객체 해제 
      camera.release();
    }
  };
  // 동영상 촬영 버튼 리스너 
  private OnClickListener shutterButtonListener1 = 
    new OnClickListener() {
    public void onClick(View v) {
      if(record == false) {
        // 카메라 잠금 헤제 처리
        camera.unlock();
        // MediaRecorder 구현
        mRecorder = new MediaRecorder();
        // 동영상촬영에 사용할 카메라 세트
        mRecorder.setCamera(camera);
        // 비디오 입력 소스에 카메라를 세트 
        mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
        // 출력 포맷에 MPEG4 세트
        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
        // 비디오 인코더에 MPEG_4_SP를 세트
        mRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.MPEG_4_SP);
        // SD 카드/패키지 명 디렉터리 생성   
        File dataDir = new File(
            Environment.getExternalStorageDirectory(), 
            getPackageName());
        // 패키지명의 디렉터리가 SD 카드에 없으면 작성  
        if (dataDir.exists() == false) {
          dataDir.mkdir();
        }
        // 파일명과 확장자 설정
        Date today = new Date();
        SimpleDateFormat dateFormat = 
          new SimpleDateFormat("yyyyMMddHHmmss");
        String filePath = dataDir.getPath() + "/movie_" 
                        + dateFormat.format(today) + ".mp4";
        mRecorder.setOutputFile(filePath);
        // 프레임 속도를 15로 설정
        mRecorder.setVideoFrameRate(15);
        // 촬영 크기 지정 
        mRecorder.setVideoSize(800, 480);
        // 미리보기 표시에 Surface를 세트
        mRecorder.setPreviewDisplay(
          cameraPreview.getHolder().getSurface());
        try {
          // 미디오 레코더 준비
          mRecorder.prepare();
        } catch (IllegalStateException e) {
          e.printStackTrace();
        } catch (IOException e) {
          e.printStackTrace();
        }
        // 녹화 시작 
        mRecorder.start(); 
        button1.setText("Stop");
        record = true;
      } else {
        // 녹화 종료 
        mRecorder.stop();
        // MediaRecorder 해제
        mRecorder.release();
        button1.setText("Record");
        record = false;
        try {
          camera.reconnect();
        } catch (IOException e) {
          e.printStackTrace();
        }
      }
    }
  };
  // 정지 화면 촬영 버튼 리스너 
  private OnClickListener shutterButtonListener2 = 
    new OnClickListener() {
    public void onClick(View v) {
      // 사진 촬영
      camera.takePicture(null, null, 
          new Camera.PictureCallback() {
        public void onPictureTaken(byte[] data,Camera camera) {
          // SD카드 저장 처리 호출
          try {
            saveSD(data);
            // 미리보기 다시 시작
            camera.startPreview();
          } catch (Exception e) {
            e.printStackTrace();
          }
        }
      });
    }
  };
  // SD 카드 저장 처리
  private void saveSD(byte[] data) throws Exception {
    // SD 카드/패키지명 디렉터리 생성   
    File dataDir = new File(Environment.getExternalStorageDirectory(), 
                                                this.getPackageName());
    // 패키지명의 디렉터리가 SD 카드에 없으면 작성 
    if (dataDir.exists() == false) {
      dataDir.mkdir();
    }
    // SD카드에 데이터 저장(파일명은 yyyyMMdd_HHmmss.jpg) 
    Date today = new Date();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmssS");
    FileOutputStream fos = new FileOutputStream(dataDir + "/photo_" 
                                + dateFormat.format(today) + ".jpg");
    fos.write(data);
    fos.close();
  }
}