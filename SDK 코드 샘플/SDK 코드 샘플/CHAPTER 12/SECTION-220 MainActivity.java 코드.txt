package com.example.camera04;

import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import android.app.Activity;
import android.hardware.Camera;
import android.os.Bundle;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.Button;

public class MainActivity extends Activity {
  // 카메라 선언 
  private Camera camera;
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    // 전체 화면 지정(화면 상부의 아이콘이나 시계를 표시하지 않는다) 
    getWindow().addFlags(
      WindowManager.LayoutParams.FLAG_FULLSCREEN);
    // 카메라 미리보기 화면 설정(서페이스 뷰의 지정) 
    SurfaceView cameraPreview = 
      (SurfaceView) findViewById(R.id.preview);
    // 서페이스 홀더 생성
    cameraPreview.getHolder().addCallback(previewCallback);
    // 서페이스 홀더 유형 설정 (외부 버퍼 사용)
    cameraPreview.getHolder().setType(
        SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
    // 촬영 버튼 설정
    Button button = (Button) findViewById(R.id.button);
    // 촬영 버튼의 리스너 등록
    button.setOnClickListener(shutterButtonListener);
  }
  // 서페이스 홀더의 'Callback()’ 메소드 구현
  private SurfaceHolder.Callback previewCallback = 
    new SurfaceHolder.Callback() {
    // 서페이스 생성 처리
    public void surfaceCreated(SurfaceHolder holder) {
      // 카메라 초기화 
      try {
        // 카메라 오픈
        camera = Camera.open();
        // 미리보기 디스플레이 지정
        camera.setPreviewDisplay(holder);
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
    // 서페이스 변경 처리
    public void surfaceChanged(SurfaceHolder holder, 
        int format, int width, int height) {
      // 미리보기 정지 
      camera.stopPreview();
      // 카메라 매개 변수 취득
      Camera.Parameters params = camera.getParameters();
      // 매개 변수에 미리보기 크기 설정 
      params.setPreviewSize(params.getPreviewSize().width, params.getPreviewSize().height);
      // 설정한 매개 변수를 지정
      camera.setParameters(params);
      // 카메라 미리보기 시작
      camera.startPreview();
    }
    // 서페이스 해제 처리
    public void surfaceDestroyed(SurfaceHolder holder) {
      // 카메라 미리보기 정지
      camera.stopPreview();
      // 카메라 릴리스
      camera.release();
    }
  };
  // 촬영 버튼 리스너
  private OnClickListener shutterButtonListener = 
    new OnClickListener() {
    public void onClick(View v) {
      // 사진 촬영
      camera.takePicture(null, null, 
          new Camera.PictureCallback() {
        public void onPictureTaken(byte[] data,Camera camera) {
          // SD카드에 저장 처리 호출
          try {
            saveSD(data); // SD카드에 저장
            // 미리보기 다시 시작
            camera.startPreview();
          } catch (Exception e) {
            e.printStackTrace();
          }
        }
      });
    }
  };
  // SD 카드에 저장처리 
  private void saveSD(byte[] data) throws Exception {
    // SD 카드/패키지 명 디렉터리 작성
    File dataDir = new File(Environment.getExternalStorageDirectory(), this.getPackageName());
    if (dataDir.exists() == false) {
      dataDir.mkdir();  // 패키지명의 디렉터리가 SD카드에 없으면 작성
    }
    // SD카드에 데이터 저장(파일 명은 yyyyMMdd_HHmmss.jpg) 
    Date today = new Date();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmssS");
    FileOutputStream fos = new FileOutputStream(dataDir + "/" 
                                    + dateFormat.format(today) + ".jpg");
    fos.write(data);
    fos.close();
  }
}