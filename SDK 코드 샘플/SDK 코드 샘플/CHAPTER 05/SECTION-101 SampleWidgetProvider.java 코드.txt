package com.example.widget07;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.Context;
import android.content.Intent;
import android.widget.RemoteViews;

public class SampleWidgetProvider extends AppWidgetProvider {
  @Override
  public void onDeleted(Context context, int[] appWidgetIds) {
    super.onDeleted(context, appWidgetIds);
  }

  @Override
  public void onDisabled(Context context) {
    super.onDisabled(context);
  }

  @Override
  public void onEnabled(Context context) {
    super.onEnabled(context);
  }

  @Override
  public void onReceive(Context context, Intent intent) {
    super.onReceive(context, intent);
  }

  @Override
  public void onUpdate(Context context, AppWidgetManager appWidgetManager,
      int[] appWidgetIds) {
    // 설치되어 있는 여러 위젯을 각각 설정한다
    for (int i = 0; i < appWidgetIds.length; ++i) {

      // 레이아웃을 지정하여 'RemoteViews' 오브젝트를 작성
      RemoteViews remoteView = new RemoteViews(context.getPackageName(), R.layout.main);

      // RemoteViewsService를 계승한 클래스를 인스턴스화
      Intent intent = new Intent(context, SampleWidgetService.class);
      
      // StackView의 ID를 지정하여 리모트 어댑터를 등록한다
      remoteView.setRemoteAdapter(appWidgetIds[i], R.id.list_view, intent);

      // 표시하는 아이템이 없을 때 표시되는 빈 뷰를 지정
      remoteView.setEmptyView(R.id.list_view, R.id.empty_view);
      
      // 여기까지가 리스트 뷰에 데이터를 표시하기까지의 처리

      // 여기부터는 리스트 뷰의 각 아이템 처리 시에 실행하는 인텐트 템플릿 작성
       // 리스트 아이템 클릭시 실행하는 PendingIntent를 작성
      Intent itemIntent = new Intent(Intent.ACTION_VIEW);
      PendingIntent pendingIntent = PendingIntent.getActivity(context,
          0, itemIntent, PendingIntent.FLAG_UPDATE_CURRENT);

      // 리모트 뷰에 PendingIntent를 템플레이트로 등록한다
      remoteView.setPendingIntentTemplate(R.id.list_view, pendingIntent);

      // 위젯을 업데이트
      appWidgetManager.updateAppWidget(appWidgetIds[i], remoteView);
    }
    super.onUpdate(context, appWidgetManager, appWidgetIds);
  }
}