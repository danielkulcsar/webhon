package com.example.asynctaskloader;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import android.app.Activity;
import android.app.FragmentManager;
import android.app.ListFragment;
import android.app.LoaderManager;
import android.content.AsyncTaskLoader;
import android.content.Context;
import android.content.Loader;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.Log;
import android.util.Xml;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

public class MainActivity extends Activity {
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // 프레그먼트 매니저
    FragmentManager fm = getFragmentManager();
    // 프레그먼트 리스트
    if (fm.findFragmentById(android.R.id.content) == null) {
      TimeLineFragment list = new TimeLineFragment();
      fm.beginTransaction().add(android.R.id.content, list).commit();
    }
  }
  
  public static class TimeLineEntry {
    public TimeLineEntry(TimeLineLoader loader, 
        String screen_name, String text) {
      mName = screen_name;
      mText = text;
    }
    private final String mName;
    private final String mText;
  }
  
  // AsyncTaskLoader를 상속받는 클래스 작성
  public static class TimeLineLoader 
      extends AsyncTaskLoader<List<TimeLineEntry>> {
    // List
    List<TimeLineEntry> mLines;
    public TimeLineLoader(Context context) {
      super(context);
    }
    // 백그라운드에서의 처리
    @Override
    public List<TimeLineEntry> loadInBackground() {
      // twitter의 PublicTimeLine 읽기
      List<TimeLineEntry> entries = new ArrayList<TimeLineEntry>(10);
      StrictMode.setThreadPolicy(
          new StrictMode.ThreadPolicy.Builder().permitAll().build());
      XmlPullParser xmlPullParser = Xml.newPullParser();
      try {
        URL url = new URL(
            "http://api.twitter.com/1/statuses/public_timeline.xml");
        xmlPullParser.setInput(url.openStream(),"UTF-8");
        
        String text = null;
        String name;
        int eventType;
        while ((eventType = xmlPullParser.next()) != 
            XmlPullParser.END_DOCUMENT){
          if (eventType == XmlPullParser.START_TAG){
            if (xmlPullParser.getName().equals("text")) {
              text = xmlPullParser.nextText();
            } else if (xmlPullParser.getName().equals("screen_name")) {
              name = xmlPullParser.nextText();
              TimeLineEntry entry = 
                  new TimeLineEntry(this, "【" + name + "】", text);
              entries.add(entry);
            }
          }
        }
      } catch (MalformedURLException e) {
        e.printStackTrace();
      } catch (XmlPullParserException e) {
        e.printStackTrace();
      } catch (IOException e) {
        e.printStackTrace();
      }
      return entries;
    }
    
    @Override
    protected void onStartLoading() {
      // Loader의 로드 시작
      forceLoad();
    }
    
    @Override
    protected void onStopLoading() {
      // 로드 취소
      cancelLoad();
    }
    
    @Override
    protected void onReset() {
      super.onReset();
      // Loader의 리셋
      onStopLoading();
    }
  }
  
  public static class TimeLineAdapter extends 
      ArrayAdapter<TimeLineEntry> {
    private final LayoutInflater mInflater;
    
    public TimeLineAdapter(Context context) {
      super(context, android.R.layout.simple_list_item_2);
      mInflater = (LayoutInflater)context.getSystemService(
          Context.LAYOUT_INFLATER_SERVICE);
    }
    
    public void setData(List<TimeLineEntry> data) {
      clear();
      if (data != null) {
        addAll(data);
      }
    }
    
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
      View view;
      if (convertView == null) {
        view = mInflater.inflate(R.layout.main, parent, false);
      } else {
        view = convertView;
      }
      // 아이템 취득
      TimeLineEntry item = getItem(position);
      // TextView로 표시
      ((TextView)view.findViewById(R.id.text))
          .setText(item.mName + "\n" + item.mText);
      return view;
    }
  }
  
  public static class TimeLineFragment extends ListFragment
    implements LoaderManager.LoaderCallbacks<List<TimeLineEntry>> {
    // 리스트 데이터를 표시하는 어댑터
    TimeLineAdapter mAdapter;
    // 현재의 필터 
    String mCurFilter;
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
      super.onActivityCreated(savedInstanceState);
      // 데이터가 없는 경우 표시 
      setEmptyText("No tweet!!!");
      // 데이터를 로드하는 어댑터
      mAdapter = new TimeLineAdapter(getActivity());
      setListAdapter(mAdapter);
      // 프로그레스 바 숨김
      setListShown(false);
      // Loader의 초기화와 활성화
      getLoaderManager().initLoader(0, null, this);
    }
    
    // Loader 작성시 요청
    public Loader<List<TimeLineEntry>> onCreateLoader(int id, Bundle args) {
      return new TimeLineLoader(getActivity());
    }
    
    // Loader 호출 이후
    public void onLoadFinished(Loader<List<TimeLineEntry>> loader, 
        List<TimeLineEntry> data) {
      mAdapter.setData(data);
      // 프로그레스 바 표시
      setListShown(true);
    }
    
    // Loader리셋 시에 요청
    public void onLoaderReset(Loader<List<TimeLineEntry>> loader) {
      Log.i("AsyncTaskLoader", "onLoadReset");
      mAdapter.setData(null);
    }
  }
}